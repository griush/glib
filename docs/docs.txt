[X] : Implemented

// This is a comment

Stack size: 1000

STACK:
[X] push <num>              : push a number on to the stack
[X] pop                     : pop off the first number on the stack
[X] dup                     : push a copy of what's at the top of the stack back onto the stack

OUTPUT:
[X] print                   : print the number at the top of the stack
[X] printc                  : print the ASCII character decimal value at the top of the stack

INPUT:
[X] input                   : asks for user input, and push it on top of the stack
[X] inputc                  : asks for user input (char), and push its decimal ASCII value on top of the stack

CONTROL:
[X] jmp <address>           : jump to a line number
[X] ifeq <val> <address>    : examine the top of the stack, if it's equal to <val>, continue, else, jump to <address> where <address> is a line number

ARITHMETIC:
[X] add                     : pop off the top 2 items on the stack and push their sum on to the stack
[X] sub                     : pop off the top 2 items on the stack and push their substraction on to the stack
[X] inc                     : increments by 1 the number at the top of the stack and push the result on to the stack
[X] dec                     : decrements by 1 the number at the top of the stack and push the result on to the stack
[X] mul                     : pop off the top 2 items on the stack and push their product on to the stack